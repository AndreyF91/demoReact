{"version":3,"sources":["components/Person/MyPosts/Post/Post.jsx","components/Person/MyPosts/MyPost.jsx","components/Person/MyPosts/MyPostContainer.jsx","components/Person/ProfileStatus/ProfileStatusWithHooks.jsx","components/Person/ProfileInfo/ProfileInfo.jsx","components/Person/Person.jsx","components/Person/PersonContainer.jsx"],"names":["Post","props","className","message","likesCounter","maxLength","maxLengthCreator","ReduxMyPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","name","autoComplete","validate","type","placeholder","MyPost","postElement","postData","map","el","id","values","addPost","myPostText","MyPostContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","value","onChange","e","target","onBlur","updateStatus","onFocus","select","autoFocus","PersonInfo","profile","src","photos","large","userPhoto","alt","srcset","fullName","Preloader","Person","PersonContainer","userId","this","match","params","myId","getProfile","getStatus","React","Component","compose","auth","setUserProfile","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","withRouter","AuthRedirect"],"mappings":"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","file":"static/js/4.3db1227b.chunk.js","sourcesContent":["import '../../Person.scss';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"person__posts--area--item\">\r\n  \r\n                <div className=\"avatar\"></div>\r\n                <p className=\"post__text\">{props.message}</p>\r\n       \r\n            <div className=\"post__likes\"> Понравилось <span>{props.likesCounter}</span> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import \"../Person.scss\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Input } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPost = (props) => {\r\n  let addPost = (values) => {\r\n    props.addPost(values.myPostText);\r\n  };\r\n\r\n  let postElement = props.postData.map((el) => (\r\n    <Post likesCounter={el.likesCounter} message={el.message} key={el.id} />\r\n  ));\r\n  return (\r\n    <div className=\"person__posts\">\r\n      <h3>Мои новости</h3>\r\n      <ReduxMyPostForm onSubmit={addPost} />\r\n      <div className=\"person__posts--area\">{postElement}</div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength = maxLengthCreator(20);\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Input}\r\n        name={\"myPostText\"}\r\n        autoComplete=\"off\"\r\n        className=\"person__posts--textarea\"\r\n        validate={[maxLength]}\r\n        type=\"text\"\r\n        placeholder=\"Что нового?\"\r\n      />\r\n      <button className=\"person__posts--btn\">Отправить</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxMyPostForm = reduxForm({\r\n  form: \"myPost\",\r\n})(MyPostForm);\r\n\r\nexport default MyPost;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\n\r\n// const MyPostContainer = (props) => {\r\n//     let state = props.store.getState();\r\n\r\n//     let onPostChange = (text) => {\r\n//         props.store.dispatch(updateNewPostTextActionCreator(text));\r\n\r\n//     }\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     return (\r\n//         <MyPost updateNewPostText={onPostChange} addPost={addPost} postData={state.profilePage.postData} newPostText={state.profilePage.newPostText} />\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (myPostText) => {\r\n      dispatch(addPostActionCreator(myPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(true);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const changeMode = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const unChangeMode = () => {\r\n    setEditMode(true);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const focusInput = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile__info\">\r\n      {editMode ? (\r\n        <span onClick={changeMode}>{props.status || \"Введите статус\"}</span>\r\n      ) : (\r\n        <input\r\n          value={status}\r\n          onChange={onStatusChange}\r\n          onBlur={unChangeMode}\r\n          onFocus={focusInput}\r\n          autoFocus={true}\r\n          type=\"text\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from '../../common/Preloader/Preloader';\r\nimport '../Person.scss';\r\nimport userPhoto from '../../../assets/img/userDF.png'\r\n// import ProfileStatus from '../ProfileStatus/ProfileStatus';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst PersonInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"person__header\"></div>\r\n            <div className=\"person__avatar\"><img className=\"person__avatar--img\" src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} alt=\"Аватар\" srcset=\"\" /></div>\r\n            \r\n            <div className=\"person__info\">\r\n                <h3 className=\"person__name\">{props.profile.fullName}</h3>\r\n                <div className=\"person__line\"></div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <ul>\r\n                    <li> <span>Дата рождения:</span>  2 января</li>\r\n                    <li> <span>Город:</span>  Минск</li>\r\n                    <li> <span>Образование:</span>  БГУ'11</li>\r\n                    <li> <span>Вебсайт:</span> ---</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    ) \r\n}\r\n\r\nexport default PersonInfo;","\r\n\r\nimport MyPostContainer from './MyPosts/MyPostContainer';\r\nimport './Person.scss';\r\nimport PersonInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <section className=\"person\">\r\n            <PersonInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostContainer />\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Person;","import React from \"react\";\r\nimport Person from \"./Person\";\r\nimport \"./Person.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfileThunkCreator,\r\n  getStatusThunkCreator,\r\n  setUserProfile,\r\n  updateStatusThunkCreator,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthRedirect } from \"../../hoc/AuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass PersonContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.myId;\r\n      // userId = 18748;\r\n    }\r\n\r\n    // usersAPI.getProfile(userId).then((response) => {\r\n    //   this.props.setUserProfile(response.data);\r\n    // });\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return <Person {...this.props} profile={this.props.profile} />;\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent = AuthRedirect(PersonContainer); //hoc\r\n\r\n// let mapStateToPropsForRedirect = (state) => ({\r\n//   isAuth: state.auth.isAuth,\r\n// });\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent); //второй конект для хока... херня какая-то\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  myId: state.auth.userId,\r\n});\r\n\r\n// let UrlDataContainerComponent = withRouter(PersonContainer);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getProfile: getProfileThunkCreator,\r\n    getStatus: getStatusThunkCreator,\r\n    updateStatus: updateStatusThunkCreator,\r\n  }),\r\n  withRouter,\r\n  AuthRedirect\r\n)(PersonContainer);\r\n"],"sourceRoot":""}